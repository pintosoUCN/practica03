// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Framework", b =>
                {
                    b.Property<int>("FrameworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FrameworkId"), 1L, 1);

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("FrameworkId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Framework");

                    b.HasData(
                        new
                        {
                            FrameworkId = 1,
                            Level = "Moderado",
                            Name = "React",
                            ProfileId = 1,
                            Quantity = 50,
                            Year = 2022
                        },
                        new
                        {
                            FrameworkId = 2,
                            Level = "Alto",
                            Name = "HTML",
                            ProfileId = 1,
                            Quantity = 80,
                            Year = 2020
                        },
                        new
                        {
                            FrameworkId = 3,
                            Level = "Bajo",
                            Name = "CSS",
                            ProfileId = 1,
                            Quantity = 20,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("Hobby", b =>
                {
                    b.Property<int>("HobbyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HobbyId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("HobbyId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Hobby");

                    b.HasData(
                        new
                        {
                            HobbyId = 1,
                            Description = "Jugar porque fomenta la creatividad, la sociabilidad y el desarrollo cognitivo.",
                            Name = "Jugar videojuegos",
                            ProfileId = 1
                        },
                        new
                        {
                            HobbyId = 2,
                            Description = "Cantar ya que puede aliviar el estrés, mejorar el estado de ánimo y fortalecer las habilidades comunicativas.",
                            Name = "Cantar",
                            ProfileId = 1
                        },
                        new
                        {
                            HobbyId = 3,
                            Description = "Bailar porque combina actividad física con expresión artística, promoviendo la salud y el bienestar emocional.",
                            Name = "Bailar",
                            ProfileId = 1
                        });
                });

            modelBuilder.Entity("Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileId");

                    b.ToTable("Profile");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            Age = 22,
                            City = "Antofagasta",
                            Country = "Chile",
                            Email = "joaquin.pinto@alumnos.ucn.cl",
                            Facebook = "https://www.facebook.com/",
                            ImageUrl = "https://images.mubicdn.net/images/cast_member/2552/cache-207-1524922850/image-w856.jpg?size=800x",
                            Instagram = "https://www.instagram.com/",
                            Lastname = "Pinto",
                            Name = "Joaquin",
                            Summary = "Un joven estudiante dedicado a su familia y amigos con sueños de crecer como persona y profesional."
                        });
                });

            modelBuilder.Entity("Framework", b =>
                {
                    b.HasOne("Profile", "Profile")
                        .WithMany("Frameworks")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Hobby", b =>
                {
                    b.HasOne("Profile", "Profile")
                        .WithMany("Hobbies")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Profile", b =>
                {
                    b.Navigation("Frameworks");

                    b.Navigation("Hobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
